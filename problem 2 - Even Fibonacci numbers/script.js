// ----------- Problem 2 - Even Fibonacci Numbers -------------

// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

// So first i'd break it down. What are the pieces you need?
// 1. How do I get the next fibonacci number given the previous two?
// 2. How do I loop and get all fibonacci numbers from 1-4mil?
// 3. How do I sum ONLY the even ones?

// End goals is for something like 1,2,3,5,8 to have a sum of 2+8=10. Start by just writing something that gives you the fib sequence properly.

// ................... Answer.......................

function nextFibNum(num1, num2) {
  let nextNum = 0;
  let sum = 2;
  while (nextNum <= 4000000) {
    nextNum = num1 + num2;
    num1 = num2;
    num2 = nextNum;
    if ((nextNum % 2 === 0) && (nextNum <= 4000000)) {
      console.log(nextNum)
      sum = sum + nextNum;
      console.log(`SUM ${sum}`);
    }
  }
  return sum;
}

nextFibNum(1, 2);